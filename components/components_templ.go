// Code generated by templ@v0.2.334 DO NOT EDIT.

package components

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import "context"
import "io"
import "bytes"

import "github.com/Ed1123/us-visa-wait-times/usvisa"
import "fmt"

//<link href="/assets/css/style.css" rel="stylesheet" type="text/css"/>
//<script src="/assets/js/simple-datatables.js" type="text/javascript"></script>

func Table(cities []usvisa.CityWaitTime) templ.Component {
	return templ.ComponentFunc(func(ctx context.Context, w io.Writer) (err error) {
		templBuffer, templIsBuffer := w.(*bytes.Buffer)
		if !templIsBuffer {
			templBuffer = templ.GetBuffer()
			defer templ.ReleaseBuffer(templBuffer)
		}
		ctx = templ.InitializeContext(ctx)
		var_1 := templ.GetChildren(ctx)
		if var_1 == nil {
			var_1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		_, err = templBuffer.WriteString("<head><link href=\"https://cdn.jsdelivr.net/npm/simple-datatables@latest/dist/style.css\" rel=\"stylesheet\" type=\"text/css\"><script src=\"https://cdn.jsdelivr.net/npm/simple-datatables@latest\" type=\"text/javascript\">")
		if err != nil {
			return err
		}
		var_2 := ``
		_, err = templBuffer.WriteString(var_2)
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</script></head><table id=\"table\"><thead><tr><th>")
		if err != nil {
			return err
		}
		var_3 := `City`
		_, err = templBuffer.WriteString(var_3)
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</th><th>")
		if err != nil {
			return err
		}
		var_4 := `Wait Time`
		_, err = templBuffer.WriteString(var_4)
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</th></tr></thead><tbody>")
		if err != nil {
			return err
		}
		for _, city := range cities {
			_, err = templBuffer.WriteString("<tr><td>")
			if err != nil {
				return err
			}
			var var_5 string = city.CityName
			_, err = templBuffer.WriteString(templ.EscapeString(var_5))
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString("</td>")
			if err != nil {
				return err
			}
			if city.BusinessTourismVisitor.Days != nil {
				_, err = templBuffer.WriteString("<td>")
				if err != nil {
					return err
				}
				var var_6 string = fmt.Sprint(*city.BusinessTourismVisitor.Days)
				_, err = templBuffer.WriteString(templ.EscapeString(var_6))
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString("</td>")
				if err != nil {
					return err
				}
			} else if city.BusinessTourismVisitor.Message != nil {
				_, err = templBuffer.WriteString("<td>")
				if err != nil {
					return err
				}
				var var_7 string = string(*city.BusinessTourismVisitor.Message)
				_, err = templBuffer.WriteString(templ.EscapeString(var_7))
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString("</td>")
				if err != nil {
					return err
				}
			}
			_, err = templBuffer.WriteString("</tr>")
			if err != nil {
				return err
			}
		}
		_, err = templBuffer.WriteString("</tbody><script>")
		if err != nil {
			return err
		}
		var_8 := `
			const dataTable = new simpleDatatables.DataTable("#table", {
				searchable: true,
				sortable: true,
			})
		`
		_, err = templBuffer.WriteString(var_8)
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</script></table>")
		if err != nil {
			return err
		}
		if !templIsBuffer {
			_, err = templBuffer.WriteTo(w)
		}
		return err
	})
}

func Index() templ.Component {
	return templ.ComponentFunc(func(ctx context.Context, w io.Writer) (err error) {
		templBuffer, templIsBuffer := w.(*bytes.Buffer)
		if !templIsBuffer {
			templBuffer = templ.GetBuffer()
			defer templ.ReleaseBuffer(templBuffer)
		}
		ctx = templ.InitializeContext(ctx)
		var_9 := templ.GetChildren(ctx)
		if var_9 == nil {
			var_9 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		_, err = templBuffer.WriteString("<html><head><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><title>")
		if err != nil {
			return err
		}
		var_10 := `US Visa Wait Times`
		_, err = templBuffer.WriteString(var_10)
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</title><style>")
		if err != nil {
			return err
		}
		var_11 := `
                body {
                    font-family: 'Arial', sans-serif;
                    margin: 0;
                    padding: 0;
                    background-color: #f4f4f4;
                    color: #333;
                }

                header {
                    background-color: #008080;
                    padding: 20px;
                    text-align: center;
                    color: #fff;
                }

                h1 {
                    margin: 0;
                    font-size: 36px;
                }

                h2 {
                    margin-top: 10px;
                    font-size: 24px;
                }

                section {
                    padding: 20px;
                }
            `
		_, err = templBuffer.WriteString(var_11)
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</style></head><body><header><h1>")
		if err != nil {
			return err
		}
		var_12 := `US Visa Wait Times`
		_, err = templBuffer.WriteString(var_12)
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</h1><p>")
		if err != nil {
			return err
		}
		var_13 := `Wait times for US visa appointments at consulates around the world.`
		_, err = templBuffer.WriteString(var_13)
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</p></header><section><div><h2>")
		if err != nil {
			return err
		}
		var_14 := `APIs`
		_, err = templBuffer.WriteString(var_14)
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</h2><ul><li><a href=\"/wait-times\">")
		if err != nil {
			return err
		}
		var_15 := `Wait Times`
		_, err = templBuffer.WriteString(var_15)
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</a></li><li><a href=\"/wait-times-with-country\">")
		if err != nil {
			return err
		}
		var_16 := `Wait Times with Countries`
		_, err = templBuffer.WriteString(var_16)
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</a></li></ul></div><div><h2>")
		if err != nil {
			return err
		}
		var_17 := `Tables`
		_, err = templBuffer.WriteString(var_17)
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</h2><ul><li><a href=\"/table-js\">")
		if err != nil {
			return err
		}
		var_18 := `Made with Go templating`
		_, err = templBuffer.WriteString(var_18)
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</a></li><li><a href=\"/table\">")
		if err != nil {
			return err
		}
		var_19 := `Made with Go/Templ`
		_, err = templBuffer.WriteString(var_19)
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</a></li></ul></div></section></body></html>")
		if err != nil {
			return err
		}
		if !templIsBuffer {
			_, err = templBuffer.WriteTo(w)
		}
		return err
	})
}
